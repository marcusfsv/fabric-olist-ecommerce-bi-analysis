/*

The stg_orders table contains three flags.

1. flag_missing_value: this is a global missing flag, equal to 1 if any important field is null.
    The fields are: order_approved_at, order_delivered_carrier_date, and order_delivered_customer_date.
    There are three flag notes indicating which one is missing and their interpretations.

        1.1. flag_note_order_approved_at: interprets the missing value from order_approved_at 
            - valid - no missing value
            - plausible - acceptable to be missing, when "order_status" is "canceled" or "created"
            - anomaly - when "order_status" is "delivered" but "order_approved_at" is null.
        Decision: keep valid and plausible. Remove anomaly.

        1.2. flag_note_order_delivered_carrier_date: interprets the missing value from order_delivered_carrier_date
            - valid - no missing value
            - plausible - acceptable to be missing, when "order_status" is 
                        "canceled", "created", "processing", "invoiced", "unavailable", "approved", or "shipped"
            - anomaly - when "order_status" is "delivered" but "order_delivered_carrier_date" is null
                        or when "order_delivered_customer_date" is null and "order_status" is "delivered".
        Decision: keep valid and plausible. Remove anomaly.

        1.3. flag_note_order_delivered_customer_date: interprets the missing value from order_delivered_customer_date
            - valid - no missing value
            - plausible - acceptable to be missing, when "order_status" is 
                        "canceled", "created", "processing", "invoiced", "unavailable", "approved", or "shipped"
            - anomaly - when "order_status" is "delivered" but "order_delivered_customer_date" is null
                        or when "order_delivered_customer_date" is NOT null and "order_delivered_carrier_date" is null 
                                                                            and "order_status" is "delivered".
        Decision: keep valid and plausible. Remove anomaly.

2. flag_carrier_before_approval: this is a date sanity check.
    Informs that the order was delivered to the carrier before the payment approval.
    Decision: remove the flagged rows.

3. flag_customer_before_carrier: this is a date sanity check.
    Informs that the order was delivered to the customer before being delivered to the carrier
    Decision: remove the flagged rows.

*/

-- Creating fact_orders
DROP TABLE IF EXISTS fact.fact_orders;

CREATE TABLE fact.fact_orders AS
SELECT
    -- Keys
    o.order_id,
    dc.customer_sk,  -- FK to dim_customers
    dp.date_sk AS purchase_date_sk,  -- FK to dim_date   
    da.date_sk AS approved_date_sk,
    dcar.date_sk AS delivered_carrier_date_sk,
    dcust.date_sk AS delivered_customer_date_sk,
    dest.date_sk AS estimated_delivery_date_sk,

    -- Source attribute
    o.order_status,
 
    -- Calculated metrics
    DATEDIFF(DAY, o.order_purchase_timestamp, o.order_approved_at) AS days_to_approval,
    DATEDIFF(DAY, o.order_approved_at, o.order_delivered_carrier_date) AS days_approved_to_carrier,
    DATEDIFF(DAY, o.order_approved_at, o.order_delivered_customer_date) AS days_approved_to_delivery,
    DATEDIFF(DAY, o.order_delivered_carrier_date, o.order_delivered_customer_date) AS days_carrier_to_customer,

    CASE 
        WHEN o.order_delivered_customer_date IS NOT NULL
        THEN DATEDIFF(DAY, o.order_estimated_delivery_date, o.order_delivered_customer_date)
        ELSE NULL
    END AS days_late,

    CASE
        WHEN
            CASE
                WHEN o.order_delivered_customer_date IS NOT NULL
                THEN DATEDIFF(DAY, o.order_estimated_delivery_date, o.order_delivered_customer_date)
                ELSE NULL
            END > 0
        THEN 1 ELSE 0
    END AS is_late,

    -- Flags
    o.flag_note_order_approved_at,
    o.flag_note_order_delivered_carrier_date,
    o.flag_note_order_delivered_customer_date,
    o.flag_carrier_before_approval,
    o.flag_customer_before_carrier 

FROM stg.stg_orders o
LEFT JOIN dim.dim_customers dc ON dc.customer_id = o.customer_id
LEFT JOIN dim.dim_date dp ON dp.[date] = CAST(o.order_purchase_timestamp AS DATE)
LEFT JOIN dim.dim_date da ON da.[date] = CAST(o.order_approved_at AS DATE)
LEFT JOIN dim.dim_date dcar ON dcar.[date] = CAST(o.order_delivered_carrier_date AS DATE)
LEFT JOIN dim.dim_date dcust ON dcust.[date] = CAST(o.order_delivered_customer_date AS DATE)
LEFT JOIN dim.dim_date dest ON dest.[date] = CAST(o.order_estimated_delivery_date AS DATE)
WHERE   o.flag_note_order_approved_at IN ('valid','plausible')
    AND o.flag_note_order_delivered_carrier_date IN ('valid','plausible')
    AND o.flag_note_order_delivered_customer_date IN ('valid','plausible')
    AND COALESCE(o.flag_carrier_before_approval, 0) = 0
    AND COALESCE(o.flag_customer_before_carrier, 0) = 0; 